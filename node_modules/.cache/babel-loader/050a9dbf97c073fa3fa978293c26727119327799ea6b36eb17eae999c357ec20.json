{"ast":null,"code":"var _jsxFileName = \"/home/evans/bot-battlr/src/components/FilterBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botClasses = [\"Support\", \"Medic\", \"Assault\", \"Defender\", \"Captain\", \"Witch\"];\nfunction FilterBar({\n  onFilterChange\n}) {\n  _s();\n  const [selectedClasses, setSelectedClasses] = useState([]);\n  const handleCheckboxChange = className => {\n    setSelectedClasses(prevSelected => {\n      if (prevSelected.includes(className)) {\n        return prevSelected.filter(c => c !== className);\n      } else {\n        return [...prevSelected, className];\n      }\n    });\n  };\n  useEffect(() => {\n    onFilterChange(selectedClasses);\n  }, [selectedClasses, onFilterChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Filter by Class\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), botClasses.map(className => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedClasses.includes(className),\n          onChange: () => handleCheckboxChange(className)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), className]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, className, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterBar, \"4T+sYxC5l4QSfmkChpyxL+H61/Q=\");\n_c = FilterBar;\nFilterBar.propTypes = {\n  onFilterChange: PropTypes.func.isRequired\n};\nexport default FilterBar;\nvar _c;\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsxDEV","_jsxDEV","botClasses","FilterBar","onFilterChange","_s","selectedClasses","setSelectedClasses","handleCheckboxChange","className","prevSelected","includes","filter","c","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/home/evans/bot-battlr/src/components/FilterBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst botClasses = [\"Support\", \"Medic\", \"Assault\", \"Defender\", \"Captain\", \"Witch\"];\n\nfunction FilterBar({ onFilterChange }) {\n  const [selectedClasses, setSelectedClasses] = useState([]);\n\n  const handleCheckboxChange = (className) => {\n    setSelectedClasses((prevSelected) => {\n      if (prevSelected.includes(className)) {\n        return prevSelected.filter(c => c !== className);\n      } else {\n        return [...prevSelected, className];\n      }\n    });\n  };\n\n  useEffect(() => {\n    onFilterChange(selectedClasses);\n  }, [selectedClasses, onFilterChange]);\n\n  return (\n    <div className=\"filter-bar\">\n      <h4>Filter by Class</h4>\n      {botClasses.map((className) => (\n        <div key={className}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={selectedClasses.includes(className)}\n              onChange={() => handleCheckboxChange(className)}\n            />\n            {className}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nFilterBar.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default FilterBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC;AAElF,SAASC,SAASA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMW,oBAAoB,GAAIC,SAAS,IAAK;IAC1CF,kBAAkB,CAAEG,YAAY,IAAK;MACnC,IAAIA,YAAY,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAE;QACpC,OAAOC,YAAY,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,SAAS,CAAC;MAClD,CAAC,MAAM;QACL,OAAO,CAAC,GAAGC,YAAY,EAAED,SAAS,CAAC;MACrC;IACF,CAAC,CAAC;EACJ,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdM,cAAc,CAACE,eAAe,CAAC;EACjC,CAAC,EAAE,CAACA,eAAe,EAAEF,cAAc,CAAC,CAAC;EAErC,oBACEH,OAAA;IAAKQ,SAAS,EAAC,YAAY;IAAAK,QAAA,gBACzBb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBhB,UAAU,CAACiB,GAAG,CAAEV,SAAS,iBACxBR,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UACEmB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEf,eAAe,CAACK,QAAQ,CAACF,SAAS,CAAE;UAC7Ca,QAAQ,EAAEA,CAAA,KAAMd,oBAAoB,CAACC,SAAS;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,EACDT,SAAS;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GARAT,SAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASd,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACb,EAAA,CAlCQF,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAoClBA,SAAS,CAACqB,SAAS,GAAG;EACpBpB,cAAc,EAAEL,SAAS,CAAC0B,IAAI,CAACC;AACjC,CAAC;AAED,eAAevB,SAAS;AAAC,IAAAoB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}