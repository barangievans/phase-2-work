{"ast":null,"code":"var _jsxFileName = \"/home/evans/bot-battlr/src/components/BotCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BotCard({\n  bot,\n  addToArmy,\n  removeFromArmy,\n  dischargeBot,\n  isInArmy\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: bot.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: bot.catchphrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bot.avatar_url,\n      alt: bot.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), !isInArmy ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addToArmy(bot),\n      children: \"Add to Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeFromArmy(bot.id),\n        children: \"Remove from Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dischargeBot(bot.id),\n        children: \"Discharge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = BotCard;\nexport default BotCard;\nvar _c;\n$RefreshReg$(_c, \"BotCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","BotCard","bot","addToArmy","removeFromArmy","dischargeBot","isInArmy","children","name","fileName","_jsxFileName","lineNumber","columnNumber","catchphrase","src","avatar_url","alt","onClick","id","_c","$RefreshReg$"],"sources":["/home/evans/bot-battlr/src/components/BotCard.js"],"sourcesContent":["import React from 'react';\n\nfunction BotCard({ bot, addToArmy, removeFromArmy, dischargeBot, isInArmy }) {\n  return (\n    <div>\n      <h3>{bot.name}</h3>\n      <p>{bot.catchphrase}</p>\n      <img src={bot.avatar_url} alt={bot.name} />\n      {!isInArmy ? (\n        <button onClick={() => addToArmy(bot)}>Add to Army</button>\n      ) : (\n        <>\n          <button onClick={() => removeFromArmy(bot.id)}>Remove from Army</button>\n          <button onClick={() => dischargeBot(bot.id)}>Discharge</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default BotCard;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,OAAOA,CAAC;EAAEC,GAAG;EAAEC,SAAS;EAAEC,cAAc;EAAEC,YAAY;EAAEC;AAAS,CAAC,EAAE;EAC3E,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKL,GAAG,CAACM;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBd,OAAA;MAAAS,QAAA,EAAIL,GAAG,CAACW;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBd,OAAA;MAAKgB,GAAG,EAAEZ,GAAG,CAACa,UAAW;MAACC,GAAG,EAAEd,GAAG,CAACM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1C,CAACN,QAAQ,gBACRR,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAACD,GAAG,CAAE;MAAAK,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3Dd,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACET,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACF,GAAG,CAACgB,EAAE,CAAE;QAAAX,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxEd,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACH,GAAG,CAACgB,EAAE,CAAE;QAAAX,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC/D,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACO,EAAA,GAhBQlB,OAAO;AAkBhB,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}