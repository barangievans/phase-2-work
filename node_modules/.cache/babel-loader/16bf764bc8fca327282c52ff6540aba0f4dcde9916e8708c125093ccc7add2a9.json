{"ast":null,"code":"var _jsxFileName = \"/home/evans/bot-battlr/src/components/YourBotArmy.js\";\nimport React from 'react';\nimport BotCard from './BotCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourBotArmy = ({\n  yourBotArmy,\n  onReleaseBot,\n  onDischargeBot\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: yourBotArmy.length > 0 ? yourBotArmy.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(BotCard, {\n          bot: bot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onReleaseBot(bot),\n          style: {\n            position: 'absolute',\n            top: '10px',\n            right: '10px'\n          },\n          children: \"Release\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDischargeBot(bot),\n          style: {\n            position: 'absolute',\n            bottom: '10px',\n            right: '10px',\n            backgroundColor: 'red',\n            color: 'white'\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)]\n      }, bot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your army is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","BotCard","jsxDEV","_jsxDEV","YourBotArmy","yourBotArmy","onReleaseBot","onDischargeBot","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","length","map","bot","position","onClick","top","right","bottom","backgroundColor","color","id","_c","$RefreshReg$"],"sources":["/home/evans/bot-battlr/src/components/YourBotArmy.js"],"sourcesContent":["import React from 'react';\nimport BotCard from './BotCard';\n\nconst YourBotArmy = ({ yourBotArmy, onReleaseBot, onDischargeBot }) => {\n  return (\n    <div>\n      <h2>Your Bot Army</h2>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {yourBotArmy.length > 0 ? (\n          yourBotArmy.map(bot => (\n            <div key={bot.id} style={{ position: 'relative' }}>\n              <BotCard bot={bot} />\n              <button\n                onClick={() => onReleaseBot(bot)}\n                style={{ position: 'absolute', top: '10px', right: '10px' }}\n              >\n                Release\n              </button>\n              <button\n                onClick={() => onDischargeBot(bot)}\n                style={{ position: 'absolute', bottom: '10px', right: '10px', backgroundColor: 'red', color: 'white' }}\n              >\n                x\n              </button>\n            </div>\n          ))\n        ) : (\n          <p>Your army is empty</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default YourBotArmy;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EACrE,oBACEJ,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBT,OAAA;MAAKU,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAP,QAAA,EAC/CH,WAAW,CAACW,MAAM,GAAG,CAAC,GACrBX,WAAW,CAACY,GAAG,CAACC,GAAG,iBACjBf,OAAA;QAAkBU,KAAK,EAAE;UAAEM,QAAQ,EAAE;QAAW,CAAE;QAAAX,QAAA,gBAChDL,OAAA,CAACF,OAAO;UAACiB,GAAG,EAAEA;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrBT,OAAA;UACEiB,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACY,GAAG,CAAE;UACjCL,KAAK,EAAE;YAAEM,QAAQ,EAAE,UAAU;YAAEE,GAAG,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAd,QAAA,EAC7D;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTT,OAAA;UACEiB,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACW,GAAG,CAAE;UACnCL,KAAK,EAAE;YAAEM,QAAQ,EAAE,UAAU;YAAEI,MAAM,EAAE,MAAM;YAAED,KAAK,EAAE,MAAM;YAAEE,eAAe,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAjB,QAAA,EACxG;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAbDM,GAAG,CAACQ,EAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcX,CACN,CAAC,gBAEFT,OAAA;QAAAK,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACzB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACe,EAAA,GA7BIvB,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}