{"ast":null,"code":"var _jsxFileName = \"/home/evans/bot-battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SortBar from './SortBar'; // Adjust path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([{\n    id: 1,\n    name: 'Bot1',\n    health: 90,\n    damage: 45,\n    armor: 60\n  }, {\n    id: 2,\n    name: 'Bot2',\n    health: 85,\n    damage: 50,\n    armor: 55\n  }\n  // Add more data as needed\n  ]);\n  const handleSort = attribute => {\n    const sortedData = [...data].sort((a, b) => b[attribute] - a[attribute]);\n    setData(sortedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SortBar, {\n      onSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - Health: \", item.health, \", Damage: \", item.damage, \", Armor: \", item.armor]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xE9cUzDKu6LZ2nIelNsvHF5XAbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SortBar","jsxDEV","_jsxDEV","App","_s","data","setData","id","name","health","damage","armor","handleSort","attribute","sortedData","sort","a","b","children","onSort","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["/home/evans/bot-battlr/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SortBar from './SortBar'; // Adjust path as necessary\n\nconst App = () => {\n  const [data, setData] = useState([\n    { id: 1, name: 'Bot1', health: 90, damage: 45, armor: 60 },\n    { id: 2, name: 'Bot2', health: 85, damage: 50, armor: 55 },\n    // Add more data as needed\n  ]);\n\n  const handleSort = (attribute) => {\n    const sortedData = [...data].sort((a, b) => b[attribute] - a[attribute]);\n    setData(sortedData);\n  };\n\n  return (\n    <div>\n      <SortBar onSort={handleSort} />\n      <ul>\n        {data.map(item => (\n          <li key={item.id}>\n            {item.name} - Health: {item.health}, Damage: {item.damage}, Armor: {item.armor}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAC/B;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC1D;IAAEJ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG;EACzD;EAAA,CACD,CAAC;EAEF,MAAMC,UAAU,GAAIC,SAAS,IAAK;IAChC,MAAMC,UAAU,GAAG,CAAC,GAAGT,IAAI,CAAC,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACJ,SAAS,CAAC,GAAGG,CAAC,CAACH,SAAS,CAAC,CAAC;IACxEP,OAAO,CAACQ,UAAU,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACF,OAAO;MAACmB,MAAM,EAAEP;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BrB,OAAA;MAAAgB,QAAA,EACGb,IAAI,CAACmB,GAAG,CAACC,IAAI,iBACZvB,OAAA;QAAAgB,QAAA,GACGO,IAAI,CAACjB,IAAI,EAAC,aAAW,EAACiB,IAAI,CAAChB,MAAM,EAAC,YAAU,EAACgB,IAAI,CAACf,MAAM,EAAC,WAAS,EAACe,IAAI,CAACd,KAAK;MAAA,GADvEc,IAAI,CAAClB,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxBID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}