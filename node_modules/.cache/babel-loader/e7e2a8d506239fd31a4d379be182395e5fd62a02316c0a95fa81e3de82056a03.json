{"ast":null,"code":"var _jsxFileName = \"/home/evans/bot-battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from './BotSpecs';\nimport FilterBar from './FilterBar';\nimport SortBar from './SortBar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  const [sortedBots, setSortedBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [view, setView] = useState('collection'); // 'collection', 'specs'\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(res => res.json()).then(data => {\n      console.log('Fetched bots:', data); // Add this line\n      setBots(data);\n      setFilteredBots(data);\n      setSortedBots(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(res => res.json()).then(data => {\n      setBots(data);\n      setFilteredBots(data);\n      setSortedBots(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const addToArmy = bot => {\n    if (!army.some(b => b.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n  const removeFromArmy = botId => {\n    setArmy(army.filter(bot => bot.id !== botId));\n  };\n  const dischargeBot = botId => {\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setArmy(army.filter(bot => bot.id !== botId));\n    }).catch(error => console.error('Error deleting bot:', error));\n  };\n  const handleBotClick = bot => {\n    setSelectedBot(bot);\n    setView('specs');\n  };\n  const handleEnlist = () => {\n    addToArmy(selectedBot);\n    setView('collection');\n  };\n  const handleGoBack = () => {\n    setView('collection');\n  };\n  const handleFilterChange = selectedClasses => {\n    if (selectedClasses.length === 0) {\n      setFilteredBots(bots);\n    } else {\n      setFilteredBots(bots.filter(bot => selectedClasses.includes(bot.bot_class)));\n    }\n  };\n  const handleSortChange = attribute => {\n    const sorted = [...filteredBots].sort((a, b) => {\n      if (attribute === '') return 0;\n      return b[attribute] - a[attribute]; // Descending order\n    });\n    setSortedBots(sorted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [view === 'collection' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SortBar, {\n        onSortChange: handleSortChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: sortedBots,\n        onBotClick: handleBotClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        army: army,\n        removeFromArmy: removeFromArmy,\n        dischargeBot: dischargeBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), view === 'specs' && selectedBot && /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: handleEnlist,\n      onGoBack: handleGoBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U3Z89x6TZD6/jzuP6lwE1DMIE5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","BotSpecs","FilterBar","SortBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","bots","setBots","filteredBots","setFilteredBots","sortedBots","setSortedBots","army","setArmy","selectedBot","setSelectedBot","view","setView","fetch","then","res","json","data","console","log","catch","error","addToArmy","bot","some","b","id","removeFromArmy","botId","filter","dischargeBot","method","handleBotClick","handleEnlist","handleGoBack","handleFilterChange","selectedClasses","length","includes","bot_class","handleSortChange","attribute","sorted","sort","a","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","onSortChange","onBotClick","onEnlist","onGoBack","_c","$RefreshReg$"],"sources":["/home/evans/bot-battlr/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from './BotSpecs';\nimport FilterBar from './FilterBar';\nimport SortBar from './SortBar';\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [filteredBots, setFilteredBots] = useState([]);\n  const [sortedBots, setSortedBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [view, setView] = useState('collection'); // 'collection', 'specs'\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then(res => res.json())\n      .then(data => {\n        console.log('Fetched bots:', data); // Add this line\n        setBots(data);\n        setFilteredBots(data);\n        setSortedBots(data);\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n   useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then(res => res.json())\n      .then(data => {\n        setBots(data);\n        setFilteredBots(data);\n        setSortedBots(data);\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  const addToArmy = (bot) => {\n    if (!army.some(b => b.id === bot.id)) {\n      setArmy([...army, bot]);\n    }\n  };\n\n  const removeFromArmy = (botId) => {\n    setArmy(army.filter(bot => bot.id !== botId));\n  };\n\n  const dischargeBot = (botId) => {\n    fetch(`http://localhost:8001/bots/${botId}`, {\n      method: 'DELETE'\n    })\n      .then(() => {\n        setArmy(army.filter(bot => bot.id !== botId));\n      })\n      .catch(error => console.error('Error deleting bot:', error));\n  };\n\n  const handleBotClick = (bot) => {\n    setSelectedBot(bot);\n    setView('specs');\n  };\n\n  const handleEnlist = () => {\n    addToArmy(selectedBot);\n    setView('collection');\n  };\n\n  const handleGoBack = () => {\n    setView('collection');\n  };\n\n  const handleFilterChange = (selectedClasses) => {\n    if (selectedClasses.length === 0) {\n      setFilteredBots(bots);\n    } else {\n      setFilteredBots(bots.filter(bot => selectedClasses.includes(bot.bot_class)));\n    }\n  };\n\n  const handleSortChange = (attribute) => {\n    const sorted = [...filteredBots].sort((a, b) => {\n      if (attribute === '') return 0;\n      return b[attribute] - a[attribute]; // Descending order\n    });\n    setSortedBots(sorted);\n  };\n\n  return (\n    <div className=\"App\">\n      {view === 'collection' && (\n        <>\n          <FilterBar onFilterChange={handleFilterChange} />\n          <SortBar onSortChange={handleSortChange} />\n          <BotCollection bots={sortedBots} onBotClick={handleBotClick} />\n          <YourBotArmy army={army} removeFromArmy={removeFromArmy} dischargeBot={dischargeBot} />\n        </>\n      )}\n      {view === 'specs' && selectedBot && (\n        <BotSpecs\n          bot={selectedBot}\n          onEnlist={handleEnlist}\n          onGoBack={handleGoBack}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}