{"ast":null,"code":"var _jsxFileName = \"/home/evans/bot-battlr/src/components/BotSpecs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotSpecs() {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract id from URL parameters\n  const [botData, setBotData] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:8001/bots/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setBotData(data)).catch(error => console.error('Fetch error:', error));\n  }, [id]); // Dependency on id\n\n  if (!botData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: botData.avatar_url,\n      alt: botData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: botData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health: \", botData.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Damage: \", botData.damage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Armor: \", botData.armor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", botData.bot_class]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Catchphrase: \", botData.catchphrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {/* Enlist bot logic */},\n      children: \"Enlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(BotSpecs, \"bmp+2TkDpoKVYsk+2RcxjPDzwhI=\", false, function () {\n  return [useParams];\n});\n_c = BotSpecs;\nexport default BotSpecs;\nvar _c;\n$RefreshReg$(_c, \"BotSpecs\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","BotSpecs","_s","id","botData","setBotData","fetch","then","response","ok","Error","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","avatar_url","alt","name","health","damage","armor","bot_class","catchphrase","onClick","_c","$RefreshReg$"],"sources":["/home/evans/bot-battlr/src/components/BotSpecs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction BotSpecs() {\n  const { id } = useParams();  // Extract id from URL parameters\n  const [botData, setBotData] = useState(null);\n\n  useEffect(() => {\n    fetch(`http://localhost:8001/bots/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => setBotData(data))\n      .catch(error => console.error('Fetch error:', error));\n  }, [id]);  // Dependency on id\n\n  if (!botData) return <p>Loading...</p>;\n\n  return (\n    <div>\n      <img src={botData.avatar_url} alt={botData.name} />\n      <h3>{botData.name}</h3>\n      <p>Health: {botData.health}</p>\n      <p>Damage: {botData.damage}</p>\n      <p>Armor: {botData.armor}</p>\n      <p>Class: {botData.bot_class}</p>\n      <p>Catchphrase: {botData.catchphrase}</p>\n      <button onClick={() => {/* Enlist bot logic */}}>Enlist</button>\n    </div>\n  );\n}\n\nexport default BotSpecs;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}